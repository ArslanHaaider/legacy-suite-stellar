{"$message_type":"diagnostic","message":"unused imports: `ScAddress`, `ScVal`, `String`, `Val`, `Value`, `log`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"contracts/legacy/src/lib.rs","byte_start":73,"byte_end":76,"line_start":4,"line_end":4,"column_start":43,"column_end":46,"is_primary":true,"text":[{"text":"    contract, contractimpl, contracttype, log, symbol_short, token, vec, xdr::{ScAddress, ScVal, Value}, Address, Bytes, BytesN, Env, Map, String, Symbol, Val, Vec","highlight_start":43,"highlight_end":46}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"contracts/legacy/src/lib.rs","byte_start":110,"byte_end":119,"line_start":4,"line_end":4,"column_start":80,"column_end":89,"is_primary":true,"text":[{"text":"    contract, contractimpl, contracttype, log, symbol_short, token, vec, xdr::{ScAddress, ScVal, Value}, Address, Bytes, BytesN, Env, Map, String, Symbol, Val, Vec","highlight_start":80,"highlight_end":89}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"contracts/legacy/src/lib.rs","byte_start":121,"byte_end":126,"line_start":4,"line_end":4,"column_start":91,"column_end":96,"is_primary":true,"text":[{"text":"    contract, contractimpl, contracttype, log, symbol_short, token, vec, xdr::{ScAddress, ScVal, Value}, Address, Bytes, BytesN, Env, Map, String, Symbol, Val, Vec","highlight_start":91,"highlight_end":96}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"contracts/legacy/src/lib.rs","byte_start":128,"byte_end":133,"line_start":4,"line_end":4,"column_start":98,"column_end":103,"is_primary":true,"text":[{"text":"    contract, contractimpl, contracttype, log, symbol_short, token, vec, xdr::{ScAddress, ScVal, Value}, Address, Bytes, BytesN, Env, Map, String, Symbol, Val, Vec","highlight_start":98,"highlight_end":103}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"contracts/legacy/src/lib.rs","byte_start":170,"byte_end":176,"line_start":4,"line_end":4,"column_start":140,"column_end":146,"is_primary":true,"text":[{"text":"    contract, contractimpl, contracttype, log, symbol_short, token, vec, xdr::{ScAddress, ScVal, Value}, Address, Bytes, BytesN, Env, Map, String, Symbol, Val, Vec","highlight_start":140,"highlight_end":146}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"contracts/legacy/src/lib.rs","byte_start":186,"byte_end":189,"line_start":4,"line_end":4,"column_start":156,"column_end":159,"is_primary":true,"text":[{"text":"    contract, contractimpl, contracttype, log, symbol_short, token, vec, xdr::{ScAddress, ScVal, Value}, Address, Bytes, BytesN, Env, Map, String, Symbol, Val, Vec","highlight_start":156,"highlight_end":159}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_imports)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove the unused imports","code":null,"level":"help","spans":[{"file_name":"contracts/legacy/src/lib.rs","byte_start":71,"byte_end":76,"line_start":4,"line_end":4,"column_start":41,"column_end":46,"is_primary":true,"text":[{"text":"    contract, contractimpl, contracttype, log, symbol_short, token, vec, xdr::{ScAddress, ScVal, Value}, Address, Bytes, BytesN, Env, Map, String, Symbol, Val, Vec","highlight_start":41,"highlight_end":46}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"contracts/legacy/src/lib.rs","byte_start":102,"byte_end":134,"line_start":4,"line_end":4,"column_start":72,"column_end":104,"is_primary":true,"text":[{"text":"    contract, contractimpl, contracttype, log, symbol_short, token, vec, xdr::{ScAddress, ScVal, Value}, Address, Bytes, BytesN, Env, Map, String, Symbol, Val, Vec","highlight_start":72,"highlight_end":104}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"contracts/legacy/src/lib.rs","byte_start":168,"byte_end":176,"line_start":4,"line_end":4,"column_start":138,"column_end":146,"is_primary":true,"text":[{"text":"    contract, contractimpl, contracttype, log, symbol_short, token, vec, xdr::{ScAddress, ScVal, Value}, Address, Bytes, BytesN, Env, Map, String, Symbol, Val, Vec","highlight_start":138,"highlight_end":146}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"contracts/legacy/src/lib.rs","byte_start":184,"byte_end":189,"line_start":4,"line_end":4,"column_start":154,"column_end":159,"is_primary":true,"text":[{"text":"    contract, contractimpl, contracttype, log, symbol_short, token, vec, xdr::{ScAddress, ScVal, Value}, Address, Bytes, BytesN, Env, Map, String, Symbol, Val, Vec","highlight_start":154,"highlight_end":159}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused imports: `ScAddress`, `ScVal`, `String`, `Val`, `Value`, `log`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcontracts/legacy/src/lib.rs:4:43\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m4\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0me, log, symbol_short, token, vec, xdr::{ScAddress, ScVal, Value}, Address, Bytes, BytesN, Env, Map, String, Symbol, Val, \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\u001b[0m                                  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\u001b[0m                                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_imports)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"type `admin` should have an upper camel case name","code":{"code":"non_camel_case_types","explanation":null},"level":"warning","spans":[{"file_name":"contracts/legacy/src/lib.rs","byte_start":416,"byte_end":421,"line_start":17,"line_end":17,"column_start":12,"column_end":17,"is_primary":true,"text":[{"text":"pub struct admin {","highlight_start":12,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(non_camel_case_types)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"convert the identifier to upper camel case","code":null,"level":"help","spans":[{"file_name":"contracts/legacy/src/lib.rs","byte_start":416,"byte_end":421,"line_start":17,"line_end":17,"column_start":12,"column_end":17,"is_primary":true,"text":[{"text":"pub struct admin {","highlight_start":12,"highlight_end":17}],"label":null,"suggested_replacement":"Admin","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: type `admin` should have an upper camel case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcontracts/legacy/src/lib.rs:17:12\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m17\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct admin {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to upper camel case: `Admin`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(non_camel_case_types)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"variable does not need to be mutable","code":{"code":"unused_mut","explanation":null},"level":"warning","spans":[{"file_name":"contracts/legacy/src/lib.rs","byte_start":4174,"byte_end":4195,"line_start":113,"line_end":113,"column_start":17,"column_end":38,"is_primary":true,"text":[{"text":"            let mut benificary_assets: Vec<(Address, i128)> =","highlight_start":17,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_mut)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove this `mut`","code":null,"level":"help","spans":[{"file_name":"contracts/legacy/src/lib.rs","byte_start":4174,"byte_end":4178,"line_start":113,"line_end":113,"column_start":17,"column_end":21,"is_primary":true,"text":[{"text":"            let mut benificary_assets: Vec<(Address, i128)> =","highlight_start":17,"highlight_end":21}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable does not need to be mutable\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcontracts/legacy/src/lib.rs:113:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m113\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            let mut benificary_assets: Vec<(Address, i128)> =\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----\u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mhelp: remove this `mut`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_mut)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused variable: `env`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"contracts/legacy/src/lib.rs","byte_start":5043,"byte_end":5046,"line_start":131,"line_end":131,"column_start":28,"column_end":31,"is_primary":true,"text":[{"text":"    pub fn test_admin_sign(env: Env) -> bool {","highlight_start":28,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_variables)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"contracts/legacy/src/lib.rs","byte_start":5043,"byte_end":5046,"line_start":131,"line_end":131,"column_start":28,"column_end":31,"is_primary":true,"text":[{"text":"    pub fn test_admin_sign(env: Env) -> bool {","highlight_start":28,"highlight_end":31}],"label":null,"suggested_replacement":"_env","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `env`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcontracts/legacy/src/lib.rs:131:28\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m131\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn test_admin_sign(env: Env) -> bool {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_env`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_variables)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused variable: `env`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"contracts/legacy/src/lib.rs","byte_start":5104,"byte_end":5107,"line_start":134,"line_end":134,"column_start":23,"column_end":26,"is_primary":true,"text":[{"text":"    pub fn param_test(env:Env,from:Address)-> bool{","highlight_start":23,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"contracts/legacy/src/lib.rs","byte_start":5104,"byte_end":5107,"line_start":134,"line_end":134,"column_start":23,"column_end":26,"is_primary":true,"text":[{"text":"    pub fn param_test(env:Env,from:Address)-> bool{","highlight_start":23,"highlight_end":26}],"label":null,"suggested_replacement":"_env","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `env`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcontracts/legacy/src/lib.rs:134:23\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m134\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn param_test(env:Env,from:Address)-> bool{\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_env`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused variable: `from`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"contracts/legacy/src/lib.rs","byte_start":5112,"byte_end":5116,"line_start":134,"line_end":134,"column_start":31,"column_end":35,"is_primary":true,"text":[{"text":"    pub fn param_test(env:Env,from:Address)-> bool{","highlight_start":31,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"contracts/legacy/src/lib.rs","byte_start":5112,"byte_end":5116,"line_start":134,"line_end":134,"column_start":31,"column_end":35,"is_primary":true,"text":[{"text":"    pub fn param_test(env:Env,from:Address)-> bool{","highlight_start":31,"highlight_end":35}],"label":null,"suggested_replacement":"_from","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `from`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcontracts/legacy/src/lib.rs:134:31\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m134\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn param_test(env:Env,from:Address)-> bool{\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                              \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_from`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"variable `token_Addresss` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"contracts/legacy/src/lib.rs","byte_start":4419,"byte_end":4433,"line_start":117,"line_end":117,"column_start":22,"column_end":36,"is_primary":true,"text":[{"text":"                let (token_Addresss, amount) = assets;","highlight_start":22,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(non_snake_case)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"contracts/legacy/src/lib.rs","byte_start":4419,"byte_end":4433,"line_start":117,"line_end":117,"column_start":22,"column_end":36,"is_primary":true,"text":[{"text":"                let (token_Addresss, amount) = assets;","highlight_start":22,"highlight_end":36}],"label":null,"suggested_replacement":"token_addresss","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable `token_Addresss` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mcontracts/legacy/src/lib.rs:117:22\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m117\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                let (token_Addresss, amount) = assets;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `token_addresss`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(non_snake_case)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"7 warnings emitted","code":null,"level":"warning","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: 7 warnings emitted\u001b[0m\n\n"}
